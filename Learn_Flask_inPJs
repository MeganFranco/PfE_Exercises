views.py
from random import randint

from app import app
from flask import render_template
 
@app.route('/')
def lucky_static():
    return render_template('simple.html', lucky_num=randint(1,100))

simple.html   
<html>
	<body>
		<h1>Welcome to your lucky number generator!</h1>
		<p>Your lucky number is:</p>
		<p>{{ lucky_num }}</p> 
	</body>
</html>

run.py
import os
from app import app

# Host and port are unique to Cloud 9. You don't need these on your local,
# or if using other services
app.run(
    host=os.getenv('IP', '0.0.0.0'),
    port=int(os.gete
    
    
    
@app.route('/game/')
def game():
	game_nums = [] #empty list
	while len(game_nums) < 5:
		n = randint(1, 10)
		if not n in game_nums:
			game_nums.append(n)
 	return render_template('game.html', game_nums = game_nums)
 	
 	
#PIN THE VERSION
Flask==0.10.1
Flask-WTF==0.9.2
Jinja2==2.7.2
MarkupSafe==0.18
WTForms==1.0.5

#SECURTY
CSRF_ENABLED = True
SECRET_KEY = 'mars-needs-lawnmowers' #DON'T SHOW THIS ON YOUR REPO

#forms
from flask.ext.wtf import Form
from wtforms import TextField, BooleanField
from wtforms.validators import Required

class GetLucky(Form):
	numbers = TextField('numbers')
	
Werkzeug==0.11.4
argparse==1.2.1
itsdangerous==0.24
wsgiref==0.1.2

forms:  $ git checkout dad79c


#form toggle
	def validate(self):
		nums = self.numbers.data.split()
		valid = True
		for num in nums:
			if not num.isdigit():
				valid = False
		if len(nums) != 3:
			valid = False

		return valid
		
		
#Forms with errors
def validate(self):
		nums = self.numbers.data.split()
		valid = True
		errors = []

		for num in nums:
			if not num.isdigit():
				valid = False
				errors.append('One of the items is not a number')

		if len(nums) != 3:
			valid = False
			errors.append('You may submit exactly three numbers.')

		self.numbers.errors = tuple(errors)

		return valid
